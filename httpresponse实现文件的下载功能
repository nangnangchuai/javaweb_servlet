 ***********前台代码****************************
        <a href="/WEB14/downloadServlet?filename=a.flv">a.flv</a><br>
	<a href="/WEB14/downloadServlet?filename=a.jpg">a.jpg</a><br>
	<a href="/WEB14/downloadServlet?filename=a.mp3">a.mp3</a><br>
	<a href="/WEB14/downloadServlet?filename=a.mp4">a.mp4</a><br>
	<a href="/WEB14/downloadServlet?filename=a.txt">a.txt</a><br>
	<a href="/WEB14/downloadServlet?filename=a.zip">a.zip</a><br>
	<a href="/WEB14/downLoadServlet?filename=美女.jpg">美女.jpg</a><br>
  
 ************ 后台代码*****************
  public class DownloadServlet extends HttpServlet {

	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		//1.获得要下载的文件的名称，这里的“filename”需要和前台的href="/WEB14/downLoadServlet2?filename这里的filename对应
		String filename = request.getParameter("filename");//比如当在前台点击a.flv，这里filename=a.flv

                //解决获得中文参数的乱码,当点击的是美女.jpg那个文件的时候
		filename = new String(filename.getBytes("ISO8859-1"),"UTF-8");//美女.jpg
		
	        //**********解决中文文件的乱码问题开始*********
                //获得请求头中的User-Agent
		String agent = request.getHeader("User-Agent");
		//根据不同浏览器进行不同的编码----固定的
		String filenameEncoder = "";
		if (agent.contains("MSIE")) {
			// IE浏览器
			filenameEncoder = URLEncoder.encode(filename, "utf-8");
			filenameEncoder = filenameEncoder.replace("+", " ");
		} else if (agent.contains("Firefox")) {
			// 火狐浏览器
			BASE64Encoder base64Encoder = new BASE64Encoder();
			filenameEncoder = "=?utf-8?B?"
					+ base64Encoder.encode(filename.getBytes("utf-8")) + "?=";
		} else {
			// 其它浏览器
			filenameEncoder = URLEncoder.encode(filename, "utf-8");				
		}
                //**********解决中文文件的乱码问题结束*********

		//2.要下载的这个文件的类型-----客户端通过文件的MIME类型去区分类型。固定的方法
		response.setContentType(this.getServletContext().getMimeType(filename));
		
		//3.告诉客户端该文件不是直接解析 而是以附件形式打开(下载)。这是固定的这里的=左边的filename是固定的，右边的是1.中的filename编码后filenameEncoder
		response.setHeader("Content-Disposition", "attachment;filename="+filenameEncoder);

		//4.获取文件的绝对路径，因为文件默认放在webcontent的download文件夹下
		String path = this.getServletContext().getRealPath("download/"+filename);
		
		//5.获得该文件的输入流
		InputStream in = new FileInputStream(path);
		
		//6.获得输出流---通过response获得的输出流 用于向客户端写内容
		ServletOutputStream out = response.getOutputStream();
		//7.文件拷贝的模板代码
		int len = 0;
		byte[] buffer = new byte[1024];
		while((len=in.read(buffer))>0){
			out.write(buffer, 0, len);
		}

		in.close();
		//out.close();

	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doGet(request, response);
	}
}
